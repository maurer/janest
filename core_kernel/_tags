<lib/*.ml{,i}>               : pa_ounit_lib(core_kernel)
<check_caml_modify/*.ml{,i}> : pa_ounit_lib(core_kernel.check_caml_modify)
<**/*.ml{,i}>                : syntax_camlp4o
<raise_without_backtrace/*>  : -syntax_camlp4o, -debug, inline0
"lib/bigstring.ml"           : mlh, package(camlp4.macro)
"lib/bigstring_marshal.ml"   : mlh, package(camlp4.macro)
"lib/binary_packing.ml"      : mlh, package(camlp4.macro)
"lib/core_int63.ml"          : mlh, package(camlp4.macro)
"lib/core_int63.mli"         : mlh, package(camlp4.macro)
"lib/pool.ml"                : mlh, package(camlp4.macro)
"lib/pow_overflow_bounds.ml" : mlh, package(camlp4.macro)
<check_caml_modify/*>        : caml_modify_wrapper
# OASIS_START
# DO NOT EDIT (digest: d31b791cb79733d5f65ef9f04cde812f)
# Ignore VCS directories, you can use the same kind of rule outside
# OASIS_START/STOP if you want to exclude directories that contains
# useless stuff for the build process
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library check_caml_modify
"check_caml_modify/check_caml_modify.cmxs": use_check_caml_modify
"check_caml_modify/caml_modify.cmx": for-pack(Check_caml_modify)
<check_caml_modify/check_caml_modify.{cma,cmxa}>: use_libcheck_caml_modify_stubs
<check_caml_modify/*.ml{,i}>: package(pa_ounit)
<check_caml_modify/*.ml{,i}>: package(pa_ounit.syntax)
"check_caml_modify/caml_modify_stub.c": package(pa_ounit)
"check_caml_modify/caml_modify_stub.c": package(pa_ounit.syntax)
# Library raise_without_backtrace
"raise_without_backtrace/raise_without_backtrace.cmxs": use_raise_without_backtrace
"raise_without_backtrace/rwb_std.cmx": for-pack(Raise_without_backtrace)
# Library core_kernel
"lib/core_kernel.cmxs": use_core_kernel
"lib/array_permute.cmx": for-pack(Core_kernel)
"lib/avltree.cmx": for-pack(Core_kernel)
"lib/bag.cmx": for-pack(Core_kernel)
"lib/bigbuffer_internal.cmx": for-pack(Core_kernel)
"lib/bigbuffer.cmx": for-pack(Core_kernel)
"lib/bigstring_marshal.cmx": for-pack(Core_kernel)
"lib/bigstring.cmx": for-pack(Core_kernel)
"lib/bigsubstring.cmx": for-pack(Core_kernel)
"lib/binable0.cmx": for-pack(Core_kernel)
"lib/binable.cmx": for-pack(Core_kernel)
"lib/binary_packing.cmx": for-pack(Core_kernel)
"lib/binary_searchable.cmx": for-pack(Core_kernel)
"lib/binary_searchable_intf.cmx": for-pack(Core_kernel)
"lib/blang.cmx": for-pack(Core_kernel)
"lib/blit.cmx": for-pack(Core_kernel)
"lib/blit_intf.cmx": for-pack(Core_kernel)
"lib/bool.cmx": for-pack(Core_kernel)
"lib/bounded_int_table.cmx": for-pack(Core_kernel)
"lib/bucket.cmx": for-pack(Core_kernel)
"lib/byte_units.cmx": for-pack(Core_kernel)
"lib/caml.cmx": for-pack(Core_kernel)
"lib/common.cmx": for-pack(Core_kernel)
"lib/commutative_group.cmx": for-pack(Core_kernel)
"lib/comparable_intf.cmx": for-pack(Core_kernel)
"lib/comparable.cmx": for-pack(Core_kernel)
"lib/comparator.cmx": for-pack(Core_kernel)
"lib/constrained_float.cmx": for-pack(Core_kernel)
"lib/container.cmx": for-pack(Core_kernel)
"lib/container_unit_tests.cmx": for-pack(Core_kernel)
"lib/core_arg.cmx": for-pack(Core_kernel)
"lib/core_array.cmx": for-pack(Core_kernel)
"lib/core_bin_prot.cmx": for-pack(Core_kernel)
"lib/core_char.cmx": for-pack(Core_kernel)
"lib/core_field.cmx": for-pack(Core_kernel)
"lib/core_gc.cmx": for-pack(Core_kernel)
"lib/core_hashtbl_intf.cmx": for-pack(Core_kernel)
"lib/core_hashtbl.cmx": for-pack(Core_kernel)
"lib/core_int32.cmx": for-pack(Core_kernel)
"lib/core_int63.cmx": for-pack(Core_kernel)
"lib/core_int64.cmx": for-pack(Core_kernel)
"lib/core_int.cmx": for-pack(Core_kernel)
"lib/core_lazy.cmx": for-pack(Core_kernel)
"lib/core_list.cmx": for-pack(Core_kernel)
"lib/core_map_intf.cmx": for-pack(Core_kernel)
"lib/core_map.cmx": for-pack(Core_kernel)
"lib/core_map_unit_tests.cmx": for-pack(Core_kernel)
"lib/core_nativeint.cmx": for-pack(Core_kernel)
"lib/core_printexc.cmx": for-pack(Core_kernel)
"lib/core_printf.cmx": for-pack(Core_kernel)
"lib/core_queue.cmx": for-pack(Core_kernel)
"lib/core_queue_debug.cmx": for-pack(Core_kernel)
"lib/core_queue_unit_tests.cmx": for-pack(Core_kernel)
"lib/core_random.cmx": for-pack(Core_kernel)
"lib/core_set_intf.cmx": for-pack(Core_kernel)
"lib/core_set.cmx": for-pack(Core_kernel)
"lib/core_set_unit_tests.cmx": for-pack(Core_kernel)
"lib/core_sexp.cmx": for-pack(Core_kernel)
"lib/core_stack.cmx": for-pack(Core_kernel)
"lib/core_string.cmx": for-pack(Core_kernel)
"lib/core_weak.cmx": for-pack(Core_kernel)
"lib/day_of_week.cmx": for-pack(Core_kernel)
"lib/debug.cmx": for-pack(Core_kernel)
"lib/decimal.cmx": for-pack(Core_kernel)
"lib/dequeue.cmx": for-pack(Core_kernel)
"lib/doubly_linked.cmx": for-pack(Core_kernel)
"lib/equal.cmx": for-pack(Core_kernel)
"lib/error.cmx": for-pack(Core_kernel)
"lib/exn.cmx": for-pack(Core_kernel)
"lib/flags_intf.cmx": for-pack(Core_kernel)
"lib/flags.cmx": for-pack(Core_kernel)
"lib/flat_array.cmx": for-pack(Core_kernel)
"lib/flat_array_debug.cmx": for-pack(Core_kernel)
"lib/flat_array_unit_tests.cmx": for-pack(Core_kernel)
"lib/flat_queue.cmx": for-pack(Core_kernel)
"lib/flat_queue_debug.cmx": for-pack(Core_kernel)
"lib/flat_queue_unit_tests.cmx": for-pack(Core_kernel)
"lib/floatable.cmx": for-pack(Core_kernel)
"lib/float_intf.cmx": for-pack(Core_kernel)
"lib/float.cmx": for-pack(Core_kernel)
"lib/float_robust_compare.cmx": for-pack(Core_kernel)
"lib/fn.cmx": for-pack(Core_kernel)
"lib/force_once.cmx": for-pack(Core_kernel)
"lib/fqueue.cmx": for-pack(Core_kernel)
"lib/hashable.cmx": for-pack(Core_kernel)
"lib/hash_heap.cmx": for-pack(Core_kernel)
"lib/hash_queue.cmx": for-pack(Core_kernel)
"lib/hash_set_intf.cmx": for-pack(Core_kernel)
"lib/hash_set.cmx": for-pack(Core_kernel)
"lib/hashtbl_unit_tests.cmx": for-pack(Core_kernel)
"lib/heap_block.cmx": for-pack(Core_kernel)
"lib/heap_intf.cmx": for-pack(Core_kernel)
"lib/heap.cmx": for-pack(Core_kernel)
"lib/host_and_port.cmx": for-pack(Core_kernel)
"lib/identifiable.cmx": for-pack(Core_kernel)
"lib/in_channel.cmx": for-pack(Core_kernel)
"lib/info.cmx": for-pack(Core_kernel)
"lib/intable.cmx": for-pack(Core_kernel)
"lib/int_conversions.cmx": for-pack(Core_kernel)
"lib/interfaces.cmx": for-pack(Core_kernel)
"lib/interned_string.cmx": for-pack(Core_kernel)
"lib/int_intf.cmx": for-pack(Core_kernel)
"lib/int_math.cmx": for-pack(Core_kernel)
"lib/int_pow2.cmx": for-pack(Core_kernel)
"lib/int_replace_polymorphic_compare.cmx": for-pack(Core_kernel)
"lib/int_set.cmx": for-pack(Core_kernel)
"lib/invariant.cmx": for-pack(Core_kernel)
"lib/invariant_intf.cmx": for-pack(Core_kernel)
"lib/linked_queue.cmx": for-pack(Core_kernel)
"lib/linked_stack.cmx": for-pack(Core_kernel)
"lib/make_substring.cmx": for-pack(Core_kernel)
"lib/memo.cmx": for-pack(Core_kernel)
"lib/monad.cmx": for-pack(Core_kernel)
"lib/month.cmx": for-pack(Core_kernel)
"lib/never_returns.cmx": for-pack(Core_kernel)
"lib/no_polymorphic_compare.cmx": for-pack(Core_kernel)
"lib/nothing0.cmx": for-pack(Core_kernel)
"lib/nothing.cmx": for-pack(Core_kernel)
"lib/obj_array.cmx": for-pack(Core_kernel)
"lib/only_in_test.cmx": for-pack(Core_kernel)
"lib/option.cmx": for-pack(Core_kernel)
"lib/ordered_collection_common.cmx": for-pack(Core_kernel)
"lib/ordering.cmx": for-pack(Core_kernel)
"lib/or_error.cmx": for-pack(Core_kernel)
"lib/out_channel.cmx": for-pack(Core_kernel)
"lib/percent.cmx": for-pack(Core_kernel)
"lib/pid.cmx": for-pack(Core_kernel)
"lib/poly.cmx": for-pack(Core_kernel)
"lib/polymorphic_compare_intf.cmx": for-pack(Core_kernel)
"lib/polymorphic_compare.cmx": for-pack(Core_kernel)
"lib/pool.cmx": for-pack(Core_kernel)
"lib/pool_intf.cmx": for-pack(Core_kernel)
"lib/pool_unit_tests.cmx": for-pack(Core_kernel)
"lib/pooled_hashtbl.cmx": for-pack(Core_kernel)
"lib/pooled_hashtbl_unit_test.cmx": for-pack(Core_kernel)
"lib/pow_overflow_bounds.cmx": for-pack(Core_kernel)
"lib/pretty_printer.cmx": for-pack(Core_kernel)
"lib/quickcheck.cmx": for-pack(Core_kernel)
"lib/ref.cmx": for-pack(Core_kernel)
"lib/result.cmx": for-pack(Core_kernel)
"lib/robustly_comparable.cmx": for-pack(Core_kernel)
"lib/sequence.cmx": for-pack(Core_kernel)
"lib/set_once.cmx": for-pack(Core_kernel)
"lib/sexpable.cmx": for-pack(Core_kernel)
"lib/source_code_position0.cmx": for-pack(Core_kernel)
"lib/source_code_position.cmx": for-pack(Core_kernel)
"lib/stable_containers.cmx": for-pack(Core_kernel)
"lib/stable_internal.cmx": for-pack(Core_kernel)
"lib/stable.cmx": for-pack(Core_kernel)
"lib/stable_unit_test_intf.cmx": for-pack(Core_kernel)
"lib/stable_unit_test.cmx": for-pack(Core_kernel)
"lib/stack_intf.cmx": for-pack(Core_kernel)
"lib/stack_unit_tests.cmx": for-pack(Core_kernel)
"lib/staged.cmx": for-pack(Core_kernel)
"lib/std_common.cmx": for-pack(Core_kernel)
"lib/std_internal.cmx": for-pack(Core_kernel)
"lib/std_kernel.cmx": for-pack(Core_kernel)
"lib/std.cmx": for-pack(Core_kernel)
"lib/stringable.cmx": for-pack(Core_kernel)
"lib/string_id.cmx": for-pack(Core_kernel)
"lib/substring_intf.cmx": for-pack(Core_kernel)
"lib/substring.cmx": for-pack(Core_kernel)
"lib/t.cmx": for-pack(Core_kernel)
"lib/tuple.cmx": for-pack(Core_kernel)
"lib/tuple_type.cmx": for-pack(Core_kernel)
"lib/tuple_type_intf.cmx": for-pack(Core_kernel)
"lib/type_equal.cmx": for-pack(Core_kernel)
"lib/type_immediacy.cmx": for-pack(Core_kernel)
"lib/type_immediacy_conv_unit_tests.cmx": for-pack(Core_kernel)
"lib/type_immediacy_witness_unit_tests.cmx": for-pack(Core_kernel)
"lib/union_find.cmx": for-pack(Core_kernel)
"lib/unique_id_intf.cmx": for-pack(Core_kernel)
"lib/unique_id.cmx": for-pack(Core_kernel)
"lib/unit.cmx": for-pack(Core_kernel)
"lib/univ_map.cmx": for-pack(Core_kernel)
"lib/univ.cmx": for-pack(Core_kernel)
"lib/unpack_buffer.cmx": for-pack(Core_kernel)
"lib/validated_intf.cmx": for-pack(Core_kernel)
"lib/validated.cmx": for-pack(Core_kernel)
"lib/validate.cmx": for-pack(Core_kernel)
"lib/with_return.cmx": for-pack(Core_kernel)
"lib/word_size.cmx": for-pack(Core_kernel)
<lib/core_kernel.{cma,cmxa}>: use_libcore_kernel_stubs
<lib/*.ml{,i}>: package(bigarray)
<lib/*.ml{,i}>: package(bin_prot)
<lib/*.ml{,i}>: package(bin_prot.syntax)
<lib/*.ml{,i}>: package(comparelib.syntax)
<lib/*.ml{,i}>: package(enumerate)
<lib/*.ml{,i}>: package(enumerate.syntax)
<lib/*.ml{,i}>: package(fieldslib)
<lib/*.ml{,i}>: package(fieldslib.syntax)
<lib/*.ml{,i}>: package(herelib)
<lib/*.ml{,i}>: package(herelib.syntax)
<lib/*.ml{,i}>: package(pa_bench)
<lib/*.ml{,i}>: package(pa_bench.syntax)
<lib/*.ml{,i}>: package(pa_ounit)
<lib/*.ml{,i}>: package(pa_ounit.syntax)
<lib/*.ml{,i}>: package(pa_pipebang)
<lib/*.ml{,i}>: package(pa_test)
<lib/*.ml{,i}>: package(pa_test.syntax)
<lib/*.ml{,i}>: package(sexplib)
<lib/*.ml{,i}>: package(sexplib.syntax)
<lib/*.ml{,i}>: package(typerep_lib)
<lib/*.ml{,i}>: package(typerep_lib.syntax)
<lib/*.ml{,i}>: package(unix)
<lib/*.ml{,i}>: package(variantslib)
<lib/*.ml{,i}>: package(variantslib.syntax)
<lib/*.ml{,i}>: use_raise_without_backtrace
"lib/bigstring_marshal_stubs.c": package(bigarray)
"lib/bigstring_marshal_stubs.c": package(bin_prot)
"lib/bigstring_marshal_stubs.c": package(bin_prot.syntax)
"lib/bigstring_marshal_stubs.c": package(comparelib.syntax)
"lib/bigstring_marshal_stubs.c": package(enumerate)
"lib/bigstring_marshal_stubs.c": package(enumerate.syntax)
"lib/bigstring_marshal_stubs.c": package(fieldslib)
"lib/bigstring_marshal_stubs.c": package(fieldslib.syntax)
"lib/bigstring_marshal_stubs.c": package(herelib)
"lib/bigstring_marshal_stubs.c": package(herelib.syntax)
"lib/bigstring_marshal_stubs.c": package(pa_bench)
"lib/bigstring_marshal_stubs.c": package(pa_bench.syntax)
"lib/bigstring_marshal_stubs.c": package(pa_ounit)
"lib/bigstring_marshal_stubs.c": package(pa_ounit.syntax)
"lib/bigstring_marshal_stubs.c": package(pa_pipebang)
"lib/bigstring_marshal_stubs.c": package(pa_test)
"lib/bigstring_marshal_stubs.c": package(pa_test.syntax)
"lib/bigstring_marshal_stubs.c": package(sexplib)
"lib/bigstring_marshal_stubs.c": package(sexplib.syntax)
"lib/bigstring_marshal_stubs.c": package(typerep_lib)
"lib/bigstring_marshal_stubs.c": package(typerep_lib.syntax)
"lib/bigstring_marshal_stubs.c": package(unix)
"lib/bigstring_marshal_stubs.c": package(variantslib)
"lib/bigstring_marshal_stubs.c": package(variantslib.syntax)
"lib/bigstring_marshal_stubs.c": use_raise_without_backtrace
"lib/bigstring_stubs.c": package(bigarray)
"lib/bigstring_stubs.c": package(bin_prot)
"lib/bigstring_stubs.c": package(bin_prot.syntax)
"lib/bigstring_stubs.c": package(comparelib.syntax)
"lib/bigstring_stubs.c": package(enumerate)
"lib/bigstring_stubs.c": package(enumerate.syntax)
"lib/bigstring_stubs.c": package(fieldslib)
"lib/bigstring_stubs.c": package(fieldslib.syntax)
"lib/bigstring_stubs.c": package(herelib)
"lib/bigstring_stubs.c": package(herelib.syntax)
"lib/bigstring_stubs.c": package(pa_bench)
"lib/bigstring_stubs.c": package(pa_bench.syntax)
"lib/bigstring_stubs.c": package(pa_ounit)
"lib/bigstring_stubs.c": package(pa_ounit.syntax)
"lib/bigstring_stubs.c": package(pa_pipebang)
"lib/bigstring_stubs.c": package(pa_test)
"lib/bigstring_stubs.c": package(pa_test.syntax)
"lib/bigstring_stubs.c": package(sexplib)
"lib/bigstring_stubs.c": package(sexplib.syntax)
"lib/bigstring_stubs.c": package(typerep_lib)
"lib/bigstring_stubs.c": package(typerep_lib.syntax)
"lib/bigstring_stubs.c": package(unix)
"lib/bigstring_stubs.c": package(variantslib)
"lib/bigstring_stubs.c": package(variantslib.syntax)
"lib/bigstring_stubs.c": use_raise_without_backtrace
"lib/core_array_stubs.c": package(bigarray)
"lib/core_array_stubs.c": package(bin_prot)
"lib/core_array_stubs.c": package(bin_prot.syntax)
"lib/core_array_stubs.c": package(comparelib.syntax)
"lib/core_array_stubs.c": package(enumerate)
"lib/core_array_stubs.c": package(enumerate.syntax)
"lib/core_array_stubs.c": package(fieldslib)
"lib/core_array_stubs.c": package(fieldslib.syntax)
"lib/core_array_stubs.c": package(herelib)
"lib/core_array_stubs.c": package(herelib.syntax)
"lib/core_array_stubs.c": package(pa_bench)
"lib/core_array_stubs.c": package(pa_bench.syntax)
"lib/core_array_stubs.c": package(pa_ounit)
"lib/core_array_stubs.c": package(pa_ounit.syntax)
"lib/core_array_stubs.c": package(pa_pipebang)
"lib/core_array_stubs.c": package(pa_test)
"lib/core_array_stubs.c": package(pa_test.syntax)
"lib/core_array_stubs.c": package(sexplib)
"lib/core_array_stubs.c": package(sexplib.syntax)
"lib/core_array_stubs.c": package(typerep_lib)
"lib/core_array_stubs.c": package(typerep_lib.syntax)
"lib/core_array_stubs.c": package(unix)
"lib/core_array_stubs.c": package(variantslib)
"lib/core_array_stubs.c": package(variantslib.syntax)
"lib/core_array_stubs.c": use_raise_without_backtrace
"lib/core_gc_stubs.c": package(bigarray)
"lib/core_gc_stubs.c": package(bin_prot)
"lib/core_gc_stubs.c": package(bin_prot.syntax)
"lib/core_gc_stubs.c": package(comparelib.syntax)
"lib/core_gc_stubs.c": package(enumerate)
"lib/core_gc_stubs.c": package(enumerate.syntax)
"lib/core_gc_stubs.c": package(fieldslib)
"lib/core_gc_stubs.c": package(fieldslib.syntax)
"lib/core_gc_stubs.c": package(herelib)
"lib/core_gc_stubs.c": package(herelib.syntax)
"lib/core_gc_stubs.c": package(pa_bench)
"lib/core_gc_stubs.c": package(pa_bench.syntax)
"lib/core_gc_stubs.c": package(pa_ounit)
"lib/core_gc_stubs.c": package(pa_ounit.syntax)
"lib/core_gc_stubs.c": package(pa_pipebang)
"lib/core_gc_stubs.c": package(pa_test)
"lib/core_gc_stubs.c": package(pa_test.syntax)
"lib/core_gc_stubs.c": package(sexplib)
"lib/core_gc_stubs.c": package(sexplib.syntax)
"lib/core_gc_stubs.c": package(typerep_lib)
"lib/core_gc_stubs.c": package(typerep_lib.syntax)
"lib/core_gc_stubs.c": package(unix)
"lib/core_gc_stubs.c": package(variantslib)
"lib/core_gc_stubs.c": package(variantslib.syntax)
"lib/core_gc_stubs.c": use_raise_without_backtrace
"lib/hash_stubs.c": package(bigarray)
"lib/hash_stubs.c": package(bin_prot)
"lib/hash_stubs.c": package(bin_prot.syntax)
"lib/hash_stubs.c": package(comparelib.syntax)
"lib/hash_stubs.c": package(enumerate)
"lib/hash_stubs.c": package(enumerate.syntax)
"lib/hash_stubs.c": package(fieldslib)
"lib/hash_stubs.c": package(fieldslib.syntax)
"lib/hash_stubs.c": package(herelib)
"lib/hash_stubs.c": package(herelib.syntax)
"lib/hash_stubs.c": package(pa_bench)
"lib/hash_stubs.c": package(pa_bench.syntax)
"lib/hash_stubs.c": package(pa_ounit)
"lib/hash_stubs.c": package(pa_ounit.syntax)
"lib/hash_stubs.c": package(pa_pipebang)
"lib/hash_stubs.c": package(pa_test)
"lib/hash_stubs.c": package(pa_test.syntax)
"lib/hash_stubs.c": package(sexplib)
"lib/hash_stubs.c": package(sexplib.syntax)
"lib/hash_stubs.c": package(typerep_lib)
"lib/hash_stubs.c": package(typerep_lib.syntax)
"lib/hash_stubs.c": package(unix)
"lib/hash_stubs.c": package(variantslib)
"lib/hash_stubs.c": package(variantslib.syntax)
"lib/hash_stubs.c": use_raise_without_backtrace
"lib/heap_block_stubs.c": package(bigarray)
"lib/heap_block_stubs.c": package(bin_prot)
"lib/heap_block_stubs.c": package(bin_prot.syntax)
"lib/heap_block_stubs.c": package(comparelib.syntax)
"lib/heap_block_stubs.c": package(enumerate)
"lib/heap_block_stubs.c": package(enumerate.syntax)
"lib/heap_block_stubs.c": package(fieldslib)
"lib/heap_block_stubs.c": package(fieldslib.syntax)
"lib/heap_block_stubs.c": package(herelib)
"lib/heap_block_stubs.c": package(herelib.syntax)
"lib/heap_block_stubs.c": package(pa_bench)
"lib/heap_block_stubs.c": package(pa_bench.syntax)
"lib/heap_block_stubs.c": package(pa_ounit)
"lib/heap_block_stubs.c": package(pa_ounit.syntax)
"lib/heap_block_stubs.c": package(pa_pipebang)
"lib/heap_block_stubs.c": package(pa_test)
"lib/heap_block_stubs.c": package(pa_test.syntax)
"lib/heap_block_stubs.c": package(sexplib)
"lib/heap_block_stubs.c": package(sexplib.syntax)
"lib/heap_block_stubs.c": package(typerep_lib)
"lib/heap_block_stubs.c": package(typerep_lib.syntax)
"lib/heap_block_stubs.c": package(unix)
"lib/heap_block_stubs.c": package(variantslib)
"lib/heap_block_stubs.c": package(variantslib.syntax)
"lib/heap_block_stubs.c": use_raise_without_backtrace
"lib/exn_stubs.c": package(bigarray)
"lib/exn_stubs.c": package(bin_prot)
"lib/exn_stubs.c": package(bin_prot.syntax)
"lib/exn_stubs.c": package(comparelib.syntax)
"lib/exn_stubs.c": package(enumerate)
"lib/exn_stubs.c": package(enumerate.syntax)
"lib/exn_stubs.c": package(fieldslib)
"lib/exn_stubs.c": package(fieldslib.syntax)
"lib/exn_stubs.c": package(herelib)
"lib/exn_stubs.c": package(herelib.syntax)
"lib/exn_stubs.c": package(pa_bench)
"lib/exn_stubs.c": package(pa_bench.syntax)
"lib/exn_stubs.c": package(pa_ounit)
"lib/exn_stubs.c": package(pa_ounit.syntax)
"lib/exn_stubs.c": package(pa_pipebang)
"lib/exn_stubs.c": package(pa_test)
"lib/exn_stubs.c": package(pa_test.syntax)
"lib/exn_stubs.c": package(sexplib)
"lib/exn_stubs.c": package(sexplib.syntax)
"lib/exn_stubs.c": package(typerep_lib)
"lib/exn_stubs.c": package(typerep_lib.syntax)
"lib/exn_stubs.c": package(unix)
"lib/exn_stubs.c": package(variantslib)
"lib/exn_stubs.c": package(variantslib.syntax)
"lib/exn_stubs.c": use_raise_without_backtrace
"lib/int_math_stubs.c": package(bigarray)
"lib/int_math_stubs.c": package(bin_prot)
"lib/int_math_stubs.c": package(bin_prot.syntax)
"lib/int_math_stubs.c": package(comparelib.syntax)
"lib/int_math_stubs.c": package(enumerate)
"lib/int_math_stubs.c": package(enumerate.syntax)
"lib/int_math_stubs.c": package(fieldslib)
"lib/int_math_stubs.c": package(fieldslib.syntax)
"lib/int_math_stubs.c": package(herelib)
"lib/int_math_stubs.c": package(herelib.syntax)
"lib/int_math_stubs.c": package(pa_bench)
"lib/int_math_stubs.c": package(pa_bench.syntax)
"lib/int_math_stubs.c": package(pa_ounit)
"lib/int_math_stubs.c": package(pa_ounit.syntax)
"lib/int_math_stubs.c": package(pa_pipebang)
"lib/int_math_stubs.c": package(pa_test)
"lib/int_math_stubs.c": package(pa_test.syntax)
"lib/int_math_stubs.c": package(sexplib)
"lib/int_math_stubs.c": package(sexplib.syntax)
"lib/int_math_stubs.c": package(typerep_lib)
"lib/int_math_stubs.c": package(typerep_lib.syntax)
"lib/int_math_stubs.c": package(unix)
"lib/int_math_stubs.c": package(variantslib)
"lib/int_math_stubs.c": package(variantslib.syntax)
"lib/int_math_stubs.c": use_raise_without_backtrace
# Executable pool_caml_modify_check
<lib_test/pool_caml_modify_check.{native,byte}>: package(bigarray)
<lib_test/pool_caml_modify_check.{native,byte}>: package(bin_prot)
<lib_test/pool_caml_modify_check.{native,byte}>: package(bin_prot.syntax)
<lib_test/pool_caml_modify_check.{native,byte}>: package(comparelib.syntax)
<lib_test/pool_caml_modify_check.{native,byte}>: package(enumerate)
<lib_test/pool_caml_modify_check.{native,byte}>: package(enumerate.syntax)
<lib_test/pool_caml_modify_check.{native,byte}>: package(fieldslib)
<lib_test/pool_caml_modify_check.{native,byte}>: package(fieldslib.syntax)
<lib_test/pool_caml_modify_check.{native,byte}>: package(herelib)
<lib_test/pool_caml_modify_check.{native,byte}>: package(herelib.syntax)
<lib_test/pool_caml_modify_check.{native,byte}>: package(pa_bench)
<lib_test/pool_caml_modify_check.{native,byte}>: package(pa_bench.syntax)
<lib_test/pool_caml_modify_check.{native,byte}>: package(pa_ounit)
<lib_test/pool_caml_modify_check.{native,byte}>: package(pa_ounit.syntax)
<lib_test/pool_caml_modify_check.{native,byte}>: package(pa_pipebang)
<lib_test/pool_caml_modify_check.{native,byte}>: package(pa_test)
<lib_test/pool_caml_modify_check.{native,byte}>: package(pa_test.syntax)
<lib_test/pool_caml_modify_check.{native,byte}>: package(sexplib)
<lib_test/pool_caml_modify_check.{native,byte}>: package(sexplib.syntax)
<lib_test/pool_caml_modify_check.{native,byte}>: package(typerep_lib)
<lib_test/pool_caml_modify_check.{native,byte}>: package(typerep_lib.syntax)
<lib_test/pool_caml_modify_check.{native,byte}>: package(unix)
<lib_test/pool_caml_modify_check.{native,byte}>: package(variantslib)
<lib_test/pool_caml_modify_check.{native,byte}>: package(variantslib.syntax)
<lib_test/pool_caml_modify_check.{native,byte}>: use_check_caml_modify
<lib_test/pool_caml_modify_check.{native,byte}>: use_core_kernel
<lib_test/pool_caml_modify_check.{native,byte}>: use_raise_without_backtrace
<lib_test/*.ml{,i}>: package(bigarray)
<lib_test/*.ml{,i}>: package(bin_prot)
<lib_test/*.ml{,i}>: package(bin_prot.syntax)
<lib_test/*.ml{,i}>: package(comparelib.syntax)
<lib_test/*.ml{,i}>: package(enumerate)
<lib_test/*.ml{,i}>: package(enumerate.syntax)
<lib_test/*.ml{,i}>: package(fieldslib)
<lib_test/*.ml{,i}>: package(fieldslib.syntax)
<lib_test/*.ml{,i}>: package(herelib)
<lib_test/*.ml{,i}>: package(herelib.syntax)
<lib_test/*.ml{,i}>: package(pa_bench)
<lib_test/*.ml{,i}>: package(pa_bench.syntax)
<lib_test/*.ml{,i}>: package(pa_ounit)
<lib_test/*.ml{,i}>: package(pa_ounit.syntax)
<lib_test/*.ml{,i}>: package(pa_pipebang)
<lib_test/*.ml{,i}>: package(pa_test)
<lib_test/*.ml{,i}>: package(pa_test.syntax)
<lib_test/*.ml{,i}>: package(sexplib)
<lib_test/*.ml{,i}>: package(sexplib.syntax)
<lib_test/*.ml{,i}>: package(typerep_lib)
<lib_test/*.ml{,i}>: package(typerep_lib.syntax)
<lib_test/*.ml{,i}>: package(unix)
<lib_test/*.ml{,i}>: package(variantslib)
<lib_test/*.ml{,i}>: package(variantslib.syntax)
<lib_test/*.ml{,i}>: use_check_caml_modify
<lib_test/*.ml{,i}>: use_core_kernel
<lib_test/*.ml{,i}>: use_raise_without_backtrace
# OASIS_STOP
