
bin_opt support not fully functional on all architectures
=========================================================

One of the dependencies of the core library is bin_opt (Debian package:
libbin-opt-camlp4-dev). It is known, also according to upstream, to be working
properly only on:

  i386  amd64

On other architectures you do get proper marshalling and umarshalling, but you
loose architecture independence in the resulting binary format. As such, you
might get segfault when transferring data among machines having different
architectures.

Some more details on this issue are available at
http://caml.inria.fr/pub/ml-archives/caml-list/2008/05/56cf55b101f21b608feb64c75b92c679.en.html
and, more generally, in the thread starting at
http://caml.inria.fr/pub/ml-archives/caml-list/2008/05/296bd8cda27c408a793b3ec1669f2f76.en.html

 -- Stefano Zacchiroli <zack@debian.org>  Sat, 19 Jul 2008 19:24:56 +0200


Summary of "core" functionalities
=================================

- Bag (set type with duplicates)
- Bigbuffer (unlimited Buffer type)
- Bigstring (unlimited String type)
- 8/16/32/64-bit signed/unsigned binary packing functions
- Bool type
- Safe finalization for reading/writing files
- Function composition operators
- Enhanced versions of stdlib modules such as Arg, Array, Printf, etc.
- Mutexes
- CRC functions
- Dequeue type
- Doubly-linked list type
- Enhanced exception module
- Fast hash table
- Force once (thunk that can be forced only once)
- Functional queue type
- Min-heap type
- Enhanced input/output channels
- Closed interval type
- Interval set type
- Read files as lines
- Linux-specific syscalls such as sendfile, get/set TCP options, epoll, splice
- Memoization
- Piece-wise linear interpolation of floats
- Polymorphic map and set
- Find size of OCaml structures
- Space-efficient tuples
- Synchronized queues
- Thread-safe queues
- Convenience functions for Unix times
- Timed events
- Tuple convenience functions
- Extended Unix module filling in some missing syscalls such as sync,
  getrusage, initgroups, etc.

[ list courtesy of Richard Jones, see
  http://groups.google.com/group/fa.caml/msg/2e324f40ecd309bb ]

 -- Stefano Zacchiroli <zack@debian.org>  Sat, 03 May 2008 10:55:27 +0200

