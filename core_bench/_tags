# OASIS_START
# DO NOT EDIT (digest: 8fb08a3279bf0be6afb8e387bc13129f)
# Ignore VCS directories, you can use the same kind of rule outside
# OASIS_START/STOP if you want to exclude directories that contains
# useless stuff for the build process
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library core_bench
"lib/core_bench.cmxs": use_core_bench
"lib/analysis.cmx": for-pack(Core_bench)
"lib/analysis_config.cmx": for-pack(Core_bench)
"lib/analysis_result.cmx": for-pack(Core_bench)
"lib/bench.cmx": for-pack(Core_bench)
"lib/bench_command.cmx": for-pack(Core_bench)
"lib/bench_command_column.cmx": for-pack(Core_bench)
"lib/bench_result.cmx": for-pack(Core_bench)
"lib/benchmark.cmx": for-pack(Core_bench)
"lib/defaults.cmx": for-pack(Core_bench)
"lib/display.cmx": for-pack(Core_bench)
"lib/display_column.cmx": for-pack(Core_bench)
"lib/display_config.cmx": for-pack(Core_bench)
"lib/display_units.cmx": for-pack(Core_bench)
"lib/linear_algebra.cmx": for-pack(Core_bench)
"lib/linear_algebra_wrapper.cmx": for-pack(Core_bench)
"lib/measurement.cmx": for-pack(Core_bench)
"lib/measurement_sample.cmx": for-pack(Core_bench)
"lib/partial_array.cmx": for-pack(Core_bench)
"lib/run_config.cmx": for-pack(Core_bench)
"lib/std.cmx": for-pack(Core_bench)
"lib/test.cmx": for-pack(Core_bench)
"lib/to_string.cmx": for-pack(Core_bench)
"lib/variable.cmx": for-pack(Core_bench)
"lib/verbosity.cmx": for-pack(Core_bench)
<lib/core_bench.{cma,cmxa}>: use_libcore_bench_stubs
<lib/*.ml{,i}>: package(comparelib.syntax)
<lib/*.ml{,i}>: package(core)
<lib/*.ml{,i}>: package(fieldslib.syntax)
<lib/*.ml{,i}>: package(pa_ounit)
<lib/*.ml{,i}>: package(pa_ounit.syntax)
<lib/*.ml{,i}>: package(sexplib.syntax)
<lib/*.ml{,i}>: package(textutils)
<lib/*.ml{,i}>: package(threads)
"lib/rdtsc_stubs.c": package(comparelib.syntax)
"lib/rdtsc_stubs.c": package(core)
"lib/rdtsc_stubs.c": package(fieldslib.syntax)
"lib/rdtsc_stubs.c": package(pa_ounit)
"lib/rdtsc_stubs.c": package(pa_ounit.syntax)
"lib/rdtsc_stubs.c": package(sexplib.syntax)
"lib/rdtsc_stubs.c": package(textutils)
"lib/rdtsc_stubs.c": package(threads)
# Library inline_benchmarks
"inline-benchmarks/inline_benchmarks.cmxs": use_inline_benchmarks
"inline-benchmarks/runner.cmx": for-pack(Inline_benchmarks)
<inline-benchmarks/*.ml{,i}>: package(comparelib.syntax)
<inline-benchmarks/*.ml{,i}>: package(core)
<inline-benchmarks/*.ml{,i}>: package(fieldslib.syntax)
<inline-benchmarks/*.ml{,i}>: package(pa_ounit)
<inline-benchmarks/*.ml{,i}>: package(pa_ounit.syntax)
<inline-benchmarks/*.ml{,i}>: package(sexplib.syntax)
<inline-benchmarks/*.ml{,i}>: package(textutils)
<inline-benchmarks/*.ml{,i}>: package(threads)
<inline-benchmarks/*.ml{,i}>: use_core_bench
# Executable test_bench
<lib_test/test_bench.{native,byte}>: package(comparelib.syntax)
<lib_test/test_bench.{native,byte}>: package(core)
<lib_test/test_bench.{native,byte}>: package(core_extended)
<lib_test/test_bench.{native,byte}>: package(fieldslib.syntax)
<lib_test/test_bench.{native,byte}>: package(pa_ounit)
<lib_test/test_bench.{native,byte}>: package(pa_ounit.syntax)
<lib_test/test_bench.{native,byte}>: package(sexplib.syntax)
<lib_test/test_bench.{native,byte}>: package(textutils)
<lib_test/test_bench.{native,byte}>: package(threads)
<lib_test/test_bench.{native,byte}>: use_core_bench
<lib_test/*.ml{,i}>: package(comparelib.syntax)
<lib_test/*.ml{,i}>: package(core)
<lib_test/*.ml{,i}>: package(core_extended)
<lib_test/*.ml{,i}>: package(fieldslib.syntax)
<lib_test/*.ml{,i}>: package(pa_ounit)
<lib_test/*.ml{,i}>: package(pa_ounit.syntax)
<lib_test/*.ml{,i}>: package(sexplib.syntax)
<lib_test/*.ml{,i}>: package(textutils)
<lib_test/*.ml{,i}>: package(threads)
<lib_test/*.ml{,i}>: use_core_bench
<lib_test/test_bench.{native,byte}>: custom
# OASIS_STOP
<lib{,_test}/*.ml{,i}>: syntax_camlp4o, pa_ounit_lib(core_bench)
