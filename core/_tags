<lib/*.ml{,i}>             : pa_ounit_lib(core)
<lib{,_test}/*.ml{,i}>     : syntax_camlp4o
"lib/backtrace.ml"         : mlh, package(camlp4.macro)
"lib/bigstring.ml"         : mlh, package(camlp4.macro)
"lib/bigstring_marshal.ml" : mlh, package(camlp4.macro)
"lib/binary_packing.ml"    : mlh, package(camlp4.macro)
"lib/command.ml"           : mlh, package(camlp4.macro)
"lib/core_int63.ml"        : mlh, package(camlp4.macro)
"lib/core_mutex.ml"        : mlh, package(camlp4.macro)
"lib/core_unix.mli"        : mlh, package(camlp4.macro)
"lib/core_unix.ml"         : mlh, package(camlp4.macro)
"lib/linux_ext.ml"         : mlh, package(camlp4.macro)
"lib/iobuf.ml"             : mlh, package(camlp4.macro)
"lib/iobuf_tests.ml"       : mlh, package(camlp4.macro)
"lib/std.ml"               : mlh, package(camlp4.macro)
"lib/time_internal.ml"     : mlh, package(camlp4.macro)
"lib/time_stamp_counter.ml"  : mlh, package(camlp4.macro)
"lib/time_stamp_counter.mli" : mlh, package(camlp4.macro)
# OASIS_START
# DO NOT EDIT (digest: 6db483ac90072acb812596724e655658)
# Ignore VCS directories, you can use the same kind of rule outside
# OASIS_START/STOP if you want to exclude directories that contains
# useless stuff for the build process
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library core
"lib/core.cmxs": use_core
"lib/array_permute.cmx": for-pack(Core)
"lib/avltree.cmx": for-pack(Core)
"lib/backtrace.cmx": for-pack(Core)
"lib/bag.cmx": for-pack(Core)
"lib/bigbuffer.cmx": for-pack(Core)
"lib/bigbuffer_internal.cmx": for-pack(Core)
"lib/bigstring.cmx": for-pack(Core)
"lib/bigstring_marshal.cmx": for-pack(Core)
"lib/bigsubstring.cmx": for-pack(Core)
"lib/binable.cmx": for-pack(Core)
"lib/binable0.cmx": for-pack(Core)
"lib/binary_packing.cmx": for-pack(Core)
"lib/blang.cmx": for-pack(Core)
"lib/bool.cmx": for-pack(Core)
"lib/bounded_int_table.cmx": for-pack(Core)
"lib/bucket.cmx": for-pack(Core)
"lib/byte_units.cmx": for-pack(Core)
"lib/caml.cmx": for-pack(Core)
"lib/check_std.cmx": for-pack(Core)
"lib/command.cmx": for-pack(Core)
"lib/common.cmx": for-pack(Core)
"lib/commutative_group.cmx": for-pack(Core)
"lib/comparable.cmx": for-pack(Core)
"lib/comparable_intf.cmx": for-pack(Core)
"lib/comparator.cmx": for-pack(Core)
"lib/constrained_float.cmx": for-pack(Core)
"lib/container.cmx": for-pack(Core)
"lib/core_arg.cmx": for-pack(Core)
"lib/core_array.cmx": for-pack(Core)
"lib/core_bin_prot.cmx": for-pack(Core)
"lib/core_char.cmx": for-pack(Core)
"lib/core_condition.cmx": for-pack(Core)
"lib/core_field.cmx": for-pack(Core)
"lib/core_filename.cmx": for-pack(Core)
"lib/core_hashtbl.cmx": for-pack(Core)
"lib/core_hashtbl_intf.cmx": for-pack(Core)
"lib/core_int.cmx": for-pack(Core)
"lib/core_int32.cmx": for-pack(Core)
"lib/core_int63.cmx": for-pack(Core)
"lib/core_int64.cmx": for-pack(Core)
"lib/core_lazy.cmx": for-pack(Core)
"lib/core_list.cmx": for-pack(Core)
"lib/core_map.cmx": for-pack(Core)
"lib/core_map_intf.cmx": for-pack(Core)
"lib/core_map_unit_tests.cmx": for-pack(Core)
"lib/core_mutex.cmx": for-pack(Core)
"lib/core_nativeint.cmx": for-pack(Core)
"lib/core_printexc.cmx": for-pack(Core)
"lib/core_printf.cmx": for-pack(Core)
"lib/core_random.cmx": for-pack(Core)
"lib/core_set.cmx": for-pack(Core)
"lib/core_set_intf.cmx": for-pack(Core)
"lib/core_set_unit_tests.cmx": for-pack(Core)
"lib/core_sexp.cmx": for-pack(Core)
"lib/core_stack.cmx": for-pack(Core)
"lib/core_string.cmx": for-pack(Core)
"lib/core_sys.cmx": for-pack(Core)
"lib/core_thread.cmx": for-pack(Core)
"lib/core_unix.cmx": for-pack(Core)
"lib/crc.cmx": for-pack(Core)
"lib/daemon.cmx": for-pack(Core)
"lib/date.cmx": for-pack(Core)
"lib/date0.cmx": for-pack(Core)
"lib/day_of_week.cmx": for-pack(Core)
"lib/debug.cmx": for-pack(Core)
"lib/dequeue.cmx": for-pack(Core)
"lib/doubly_linked.cmx": for-pack(Core)
"lib/equal.cmx": for-pack(Core)
"lib/error.cmx": for-pack(Core)
"lib/exn.cmx": for-pack(Core)
"lib/flags.cmx": for-pack(Core)
"lib/flags_intf.cmx": for-pack(Core)
"lib/float.cmx": for-pack(Core)
"lib/floatable.cmx": for-pack(Core)
"lib/float_intf.cmx": for-pack(Core)
"lib/float_robust_compare.cmx": for-pack(Core)
"lib/fn.cmx": for-pack(Core)
"lib/force_once.cmx": for-pack(Core)
"lib/fqueue.cmx": for-pack(Core)
"lib/hashable.cmx": for-pack(Core)
"lib/hash_heap.cmx": for-pack(Core)
"lib/hash_queue.cmx": for-pack(Core)
"lib/hash_set.cmx": for-pack(Core)
"lib/hash_set_intf.cmx": for-pack(Core)
"lib/heap.cmx": for-pack(Core)
"lib/heap_block.cmx": for-pack(Core)
"lib/host_and_port.cmx": for-pack(Core)
"lib/identifiable.cmx": for-pack(Core)
"lib/in_channel.cmx": for-pack(Core)
"lib/info.cmx": for-pack(Core)
"lib/intable.cmx": for-pack(Core)
"lib/int_conversions.cmx": for-pack(Core)
"lib/interfaces.cmx": for-pack(Core)
"lib/interned_string.cmx": for-pack(Core)
"lib/interval.cmx": for-pack(Core)
"lib/interval_intf.cmx": for-pack(Core)
"lib/int_intf.cmx": for-pack(Core)
"lib/int_replace_polymorphic_compare.cmx": for-pack(Core)
"lib/int_set.cmx": for-pack(Core)
"lib/invariant.cmx": for-pack(Core)
"lib/iobuf.cmx": for-pack(Core)
"lib/iobuf_debug.cmx": for-pack(Core)
"lib/iobuf_intf.cmx": for-pack(Core)
"lib/iobuf_tests.cmx": for-pack(Core)
"lib/linux_ext.cmx": for-pack(Core)
"lib/lock_file.cmx": for-pack(Core)
"lib/make_substring.cmx": for-pack(Core)
"lib/memo.cmx": for-pack(Core)
"lib/monad.cmx": for-pack(Core)
"lib/month.cmx": for-pack(Core)
"lib/mutex0.cmx": for-pack(Core)
"lib/nano_mutex.cmx": for-pack(Core)
"lib/never_returns.cmx": for-pack(Core)
"lib/no_polymorphic_compare.cmx": for-pack(Core)
"lib/nothing.cmx": for-pack(Core)
"lib/nothing0.cmx": for-pack(Core)
"lib/ofday.cmx": for-pack(Core)
"lib/only_in_test.cmx": for-pack(Core)
"lib/option.cmx": for-pack(Core)
"lib/ordered_collection_common.cmx": for-pack(Core)
"lib/ordering.cmx": for-pack(Core)
"lib/or_error.cmx": for-pack(Core)
"lib/out_channel.cmx": for-pack(Core)
"lib/pid.cmx": for-pack(Core)
"lib/piecewise_linear.cmx": for-pack(Core)
"lib/piecewise_linear_intf.cmx": for-pack(Core)
"lib/polymorphic_compare.cmx": for-pack(Core)
"lib/polymorphic_compare_intf.cmx": for-pack(Core)
"lib/pretty_printer.cmx": for-pack(Core)
"lib/process_env.cmx": for-pack(Core)
"lib/quickcheck.cmx": for-pack(Core)
"lib/ref.cmx": for-pack(Core)
"lib/result.cmx": for-pack(Core)
"lib/robustly_comparable.cmx": for-pack(Core)
"lib/set_once.cmx": for-pack(Core)
"lib/sexpable.cmx": for-pack(Core)
"lib/signal.cmx": for-pack(Core)
"lib/source_code_position.cmx": for-pack(Core)
"lib/source_code_position0.cmx": for-pack(Core)
"lib/span.cmx": for-pack(Core)
"lib/squeue.cmx": for-pack(Core)
"lib/stable.cmx": for-pack(Core)
"lib/stable_containers.cmx": for-pack(Core)
"lib/stable_internal.cmx": for-pack(Core)
"lib/stable_unit_test.cmx": for-pack(Core)
"lib/stable_unit_test_intf.cmx": for-pack(Core)
"lib/staged.cmx": for-pack(Core)
"lib/std.cmx": for-pack(Core)
"lib/std_common.cmx": for-pack(Core)
"lib/std_kernel.cmx": for-pack(Core)
"lib/std_internal.cmx": for-pack(Core)
"lib/stringable.cmx": for-pack(Core)
"lib/string_id.cmx": for-pack(Core)
"lib/substring.cmx": for-pack(Core)
"lib/substring_intf.cmx": for-pack(Core)
"lib/syslog.cmx": for-pack(Core)
"lib/t.cmx": for-pack(Core)
"lib/thread_safe_queue.cmx": for-pack(Core)
"lib/thread_safe_queue_unit_tests.cmx": for-pack(Core)
"lib/time.cmx": for-pack(Core)
"lib/time0.cmx": for-pack(Core)
"lib/time_internal.cmx": for-pack(Core)
"lib/time_stamp_counter.cmx": for-pack(Core)
"lib/timing_wheel.cmx": for-pack(Core)
"lib/timing_wheel_intf.cmx": for-pack(Core)
"lib/timing_wheel_unit_tests.cmx": for-pack(Core)
"lib/tuple.cmx": for-pack(Core)
"lib/type_equal.cmx": for-pack(Core)
"lib/union_find.cmx": for-pack(Core)
"lib/unique_id.cmx": for-pack(Core)
"lib/unique_id_intf.cmx": for-pack(Core)
"lib/unit.cmx": for-pack(Core)
"lib/univ.cmx": for-pack(Core)
"lib/univ_map.cmx": for-pack(Core)
"lib/unpack_buffer.cmx": for-pack(Core)
"lib/user_and_group.cmx": for-pack(Core)
"lib/uuid.cmx": for-pack(Core)
"lib/validate.cmx": for-pack(Core)
"lib/weak_hashtbl.cmx": for-pack(Core)
"lib/word_size.cmx": for-pack(Core)
"lib/zone.cmx": for-pack(Core)
<lib/core.{cma,cmxa}>: oasis_library_core_cclib
"lib/libcore_stubs.lib": oasis_library_core_cclib
"lib/dllcore_stubs.dll": oasis_library_core_cclib
"lib/libcore_stubs.a": oasis_library_core_cclib
"lib/dllcore_stubs.so": oasis_library_core_cclib
<lib/core.{cma,cmxa}>: use_libcore_stubs
<lib/*.ml{,i}>: package(bigarray)
<lib/*.ml{,i}>: package(bin_prot)
<lib/*.ml{,i}>: package(bin_prot.syntax)
<lib/*.ml{,i}>: package(comparelib.syntax)
<lib/*.ml{,i}>: package(core_kernel)
<lib/*.ml{,i}>: package(enumerate.syntax)
<lib/*.ml{,i}>: package(fieldslib)
<lib/*.ml{,i}>: package(fieldslib.syntax)
<lib/*.ml{,i}>: package(herelib)
<lib/*.ml{,i}>: package(herelib.syntax)
<lib/*.ml{,i}>: package(pa_bench)
<lib/*.ml{,i}>: package(pa_bench.syntax)
<lib/*.ml{,i}>: package(pa_ounit)
<lib/*.ml{,i}>: package(pa_ounit.syntax)
<lib/*.ml{,i}>: package(pa_pipebang)
<lib/*.ml{,i}>: package(pa_test)
<lib/*.ml{,i}>: package(pa_test.syntax)
<lib/*.ml{,i}>: package(sexplib)
<lib/*.ml{,i}>: package(sexplib.syntax)
<lib/*.ml{,i}>: package(sexplib_unix)
<lib/*.ml{,i}>: package(threads)
<lib/*.ml{,i}>: package(unix)
<lib/*.ml{,i}>: package(variantslib)
<lib/*.ml{,i}>: package(variantslib.syntax)
"lib/backtrace_stubs.c": package(bigarray)
"lib/backtrace_stubs.c": package(bin_prot)
"lib/backtrace_stubs.c": package(bin_prot.syntax)
"lib/backtrace_stubs.c": package(comparelib.syntax)
"lib/backtrace_stubs.c": package(core_kernel)
"lib/backtrace_stubs.c": package(enumerate.syntax)
"lib/backtrace_stubs.c": package(fieldslib)
"lib/backtrace_stubs.c": package(fieldslib.syntax)
"lib/backtrace_stubs.c": package(herelib)
"lib/backtrace_stubs.c": package(herelib.syntax)
"lib/backtrace_stubs.c": package(pa_bench)
"lib/backtrace_stubs.c": package(pa_bench.syntax)
"lib/backtrace_stubs.c": package(pa_ounit)
"lib/backtrace_stubs.c": package(pa_ounit.syntax)
"lib/backtrace_stubs.c": package(pa_pipebang)
"lib/backtrace_stubs.c": package(pa_test)
"lib/backtrace_stubs.c": package(pa_test.syntax)
"lib/backtrace_stubs.c": package(sexplib)
"lib/backtrace_stubs.c": package(sexplib.syntax)
"lib/backtrace_stubs.c": package(sexplib_unix)
"lib/backtrace_stubs.c": package(threads)
"lib/backtrace_stubs.c": package(unix)
"lib/backtrace_stubs.c": package(variantslib)
"lib/backtrace_stubs.c": package(variantslib.syntax)
"lib/bigstring_stubs.c": package(bigarray)
"lib/bigstring_stubs.c": package(bin_prot)
"lib/bigstring_stubs.c": package(bin_prot.syntax)
"lib/bigstring_stubs.c": package(comparelib.syntax)
"lib/bigstring_stubs.c": package(core_kernel)
"lib/bigstring_stubs.c": package(enumerate.syntax)
"lib/bigstring_stubs.c": package(fieldslib)
"lib/bigstring_stubs.c": package(fieldslib.syntax)
"lib/bigstring_stubs.c": package(herelib)
"lib/bigstring_stubs.c": package(herelib.syntax)
"lib/bigstring_stubs.c": package(pa_bench)
"lib/bigstring_stubs.c": package(pa_bench.syntax)
"lib/bigstring_stubs.c": package(pa_ounit)
"lib/bigstring_stubs.c": package(pa_ounit.syntax)
"lib/bigstring_stubs.c": package(pa_pipebang)
"lib/bigstring_stubs.c": package(pa_test)
"lib/bigstring_stubs.c": package(pa_test.syntax)
"lib/bigstring_stubs.c": package(sexplib)
"lib/bigstring_stubs.c": package(sexplib.syntax)
"lib/bigstring_stubs.c": package(sexplib_unix)
"lib/bigstring_stubs.c": package(threads)
"lib/bigstring_stubs.c": package(unix)
"lib/bigstring_stubs.c": package(variantslib)
"lib/bigstring_stubs.c": package(variantslib.syntax)
"lib/crc_stubs.c": package(bigarray)
"lib/crc_stubs.c": package(bin_prot)
"lib/crc_stubs.c": package(bin_prot.syntax)
"lib/crc_stubs.c": package(comparelib.syntax)
"lib/crc_stubs.c": package(core_kernel)
"lib/crc_stubs.c": package(enumerate.syntax)
"lib/crc_stubs.c": package(fieldslib)
"lib/crc_stubs.c": package(fieldslib.syntax)
"lib/crc_stubs.c": package(herelib)
"lib/crc_stubs.c": package(herelib.syntax)
"lib/crc_stubs.c": package(pa_bench)
"lib/crc_stubs.c": package(pa_bench.syntax)
"lib/crc_stubs.c": package(pa_ounit)
"lib/crc_stubs.c": package(pa_ounit.syntax)
"lib/crc_stubs.c": package(pa_pipebang)
"lib/crc_stubs.c": package(pa_test)
"lib/crc_stubs.c": package(pa_test.syntax)
"lib/crc_stubs.c": package(sexplib)
"lib/crc_stubs.c": package(sexplib.syntax)
"lib/crc_stubs.c": package(sexplib_unix)
"lib/crc_stubs.c": package(threads)
"lib/crc_stubs.c": package(unix)
"lib/crc_stubs.c": package(variantslib)
"lib/crc_stubs.c": package(variantslib.syntax)
"lib/iobuf_stubs.c": package(bigarray)
"lib/iobuf_stubs.c": package(bin_prot)
"lib/iobuf_stubs.c": package(bin_prot.syntax)
"lib/iobuf_stubs.c": package(comparelib.syntax)
"lib/iobuf_stubs.c": package(core_kernel)
"lib/iobuf_stubs.c": package(enumerate.syntax)
"lib/iobuf_stubs.c": package(fieldslib)
"lib/iobuf_stubs.c": package(fieldslib.syntax)
"lib/iobuf_stubs.c": package(herelib)
"lib/iobuf_stubs.c": package(herelib.syntax)
"lib/iobuf_stubs.c": package(pa_bench)
"lib/iobuf_stubs.c": package(pa_bench.syntax)
"lib/iobuf_stubs.c": package(pa_ounit)
"lib/iobuf_stubs.c": package(pa_ounit.syntax)
"lib/iobuf_stubs.c": package(pa_pipebang)
"lib/iobuf_stubs.c": package(pa_test)
"lib/iobuf_stubs.c": package(pa_test.syntax)
"lib/iobuf_stubs.c": package(sexplib)
"lib/iobuf_stubs.c": package(sexplib.syntax)
"lib/iobuf_stubs.c": package(sexplib_unix)
"lib/iobuf_stubs.c": package(threads)
"lib/iobuf_stubs.c": package(unix)
"lib/iobuf_stubs.c": package(variantslib)
"lib/iobuf_stubs.c": package(variantslib.syntax)
"lib/linux_ext_stubs.c": package(bigarray)
"lib/linux_ext_stubs.c": package(bin_prot)
"lib/linux_ext_stubs.c": package(bin_prot.syntax)
"lib/linux_ext_stubs.c": package(comparelib.syntax)
"lib/linux_ext_stubs.c": package(core_kernel)
"lib/linux_ext_stubs.c": package(enumerate.syntax)
"lib/linux_ext_stubs.c": package(fieldslib)
"lib/linux_ext_stubs.c": package(fieldslib.syntax)
"lib/linux_ext_stubs.c": package(herelib)
"lib/linux_ext_stubs.c": package(herelib.syntax)
"lib/linux_ext_stubs.c": package(pa_bench)
"lib/linux_ext_stubs.c": package(pa_bench.syntax)
"lib/linux_ext_stubs.c": package(pa_ounit)
"lib/linux_ext_stubs.c": package(pa_ounit.syntax)
"lib/linux_ext_stubs.c": package(pa_pipebang)
"lib/linux_ext_stubs.c": package(pa_test)
"lib/linux_ext_stubs.c": package(pa_test.syntax)
"lib/linux_ext_stubs.c": package(sexplib)
"lib/linux_ext_stubs.c": package(sexplib.syntax)
"lib/linux_ext_stubs.c": package(sexplib_unix)
"lib/linux_ext_stubs.c": package(threads)
"lib/linux_ext_stubs.c": package(unix)
"lib/linux_ext_stubs.c": package(variantslib)
"lib/linux_ext_stubs.c": package(variantslib.syntax)
"lib/ocaml_utils_stubs.c": package(bigarray)
"lib/ocaml_utils_stubs.c": package(bin_prot)
"lib/ocaml_utils_stubs.c": package(bin_prot.syntax)
"lib/ocaml_utils_stubs.c": package(comparelib.syntax)
"lib/ocaml_utils_stubs.c": package(core_kernel)
"lib/ocaml_utils_stubs.c": package(enumerate.syntax)
"lib/ocaml_utils_stubs.c": package(fieldslib)
"lib/ocaml_utils_stubs.c": package(fieldslib.syntax)
"lib/ocaml_utils_stubs.c": package(herelib)
"lib/ocaml_utils_stubs.c": package(herelib.syntax)
"lib/ocaml_utils_stubs.c": package(pa_bench)
"lib/ocaml_utils_stubs.c": package(pa_bench.syntax)
"lib/ocaml_utils_stubs.c": package(pa_ounit)
"lib/ocaml_utils_stubs.c": package(pa_ounit.syntax)
"lib/ocaml_utils_stubs.c": package(pa_pipebang)
"lib/ocaml_utils_stubs.c": package(pa_test)
"lib/ocaml_utils_stubs.c": package(pa_test.syntax)
"lib/ocaml_utils_stubs.c": package(sexplib)
"lib/ocaml_utils_stubs.c": package(sexplib.syntax)
"lib/ocaml_utils_stubs.c": package(sexplib_unix)
"lib/ocaml_utils_stubs.c": package(threads)
"lib/ocaml_utils_stubs.c": package(unix)
"lib/ocaml_utils_stubs.c": package(variantslib)
"lib/ocaml_utils_stubs.c": package(variantslib.syntax)
"lib/recvmmsg.c": package(bigarray)
"lib/recvmmsg.c": package(bin_prot)
"lib/recvmmsg.c": package(bin_prot.syntax)
"lib/recvmmsg.c": package(comparelib.syntax)
"lib/recvmmsg.c": package(core_kernel)
"lib/recvmmsg.c": package(enumerate.syntax)
"lib/recvmmsg.c": package(fieldslib)
"lib/recvmmsg.c": package(fieldslib.syntax)
"lib/recvmmsg.c": package(herelib)
"lib/recvmmsg.c": package(herelib.syntax)
"lib/recvmmsg.c": package(pa_bench)
"lib/recvmmsg.c": package(pa_bench.syntax)
"lib/recvmmsg.c": package(pa_ounit)
"lib/recvmmsg.c": package(pa_ounit.syntax)
"lib/recvmmsg.c": package(pa_pipebang)
"lib/recvmmsg.c": package(pa_test)
"lib/recvmmsg.c": package(pa_test.syntax)
"lib/recvmmsg.c": package(sexplib)
"lib/recvmmsg.c": package(sexplib.syntax)
"lib/recvmmsg.c": package(sexplib_unix)
"lib/recvmmsg.c": package(threads)
"lib/recvmmsg.c": package(unix)
"lib/recvmmsg.c": package(variantslib)
"lib/recvmmsg.c": package(variantslib.syntax)
"lib/signal_stubs.c": package(bigarray)
"lib/signal_stubs.c": package(bin_prot)
"lib/signal_stubs.c": package(bin_prot.syntax)
"lib/signal_stubs.c": package(comparelib.syntax)
"lib/signal_stubs.c": package(core_kernel)
"lib/signal_stubs.c": package(enumerate.syntax)
"lib/signal_stubs.c": package(fieldslib)
"lib/signal_stubs.c": package(fieldslib.syntax)
"lib/signal_stubs.c": package(herelib)
"lib/signal_stubs.c": package(herelib.syntax)
"lib/signal_stubs.c": package(pa_bench)
"lib/signal_stubs.c": package(pa_bench.syntax)
"lib/signal_stubs.c": package(pa_ounit)
"lib/signal_stubs.c": package(pa_ounit.syntax)
"lib/signal_stubs.c": package(pa_pipebang)
"lib/signal_stubs.c": package(pa_test)
"lib/signal_stubs.c": package(pa_test.syntax)
"lib/signal_stubs.c": package(sexplib)
"lib/signal_stubs.c": package(sexplib.syntax)
"lib/signal_stubs.c": package(sexplib_unix)
"lib/signal_stubs.c": package(threads)
"lib/signal_stubs.c": package(unix)
"lib/signal_stubs.c": package(variantslib)
"lib/signal_stubs.c": package(variantslib.syntax)
"lib/syslog_stubs.c": package(bigarray)
"lib/syslog_stubs.c": package(bin_prot)
"lib/syslog_stubs.c": package(bin_prot.syntax)
"lib/syslog_stubs.c": package(comparelib.syntax)
"lib/syslog_stubs.c": package(core_kernel)
"lib/syslog_stubs.c": package(enumerate.syntax)
"lib/syslog_stubs.c": package(fieldslib)
"lib/syslog_stubs.c": package(fieldslib.syntax)
"lib/syslog_stubs.c": package(herelib)
"lib/syslog_stubs.c": package(herelib.syntax)
"lib/syslog_stubs.c": package(pa_bench)
"lib/syslog_stubs.c": package(pa_bench.syntax)
"lib/syslog_stubs.c": package(pa_ounit)
"lib/syslog_stubs.c": package(pa_ounit.syntax)
"lib/syslog_stubs.c": package(pa_pipebang)
"lib/syslog_stubs.c": package(pa_test)
"lib/syslog_stubs.c": package(pa_test.syntax)
"lib/syslog_stubs.c": package(sexplib)
"lib/syslog_stubs.c": package(sexplib.syntax)
"lib/syslog_stubs.c": package(sexplib_unix)
"lib/syslog_stubs.c": package(threads)
"lib/syslog_stubs.c": package(unix)
"lib/syslog_stubs.c": package(variantslib)
"lib/syslog_stubs.c": package(variantslib.syntax)
"lib/timespec.c": package(bigarray)
"lib/timespec.c": package(bin_prot)
"lib/timespec.c": package(bin_prot.syntax)
"lib/timespec.c": package(comparelib.syntax)
"lib/timespec.c": package(core_kernel)
"lib/timespec.c": package(enumerate.syntax)
"lib/timespec.c": package(fieldslib)
"lib/timespec.c": package(fieldslib.syntax)
"lib/timespec.c": package(herelib)
"lib/timespec.c": package(herelib.syntax)
"lib/timespec.c": package(pa_bench)
"lib/timespec.c": package(pa_bench.syntax)
"lib/timespec.c": package(pa_ounit)
"lib/timespec.c": package(pa_ounit.syntax)
"lib/timespec.c": package(pa_pipebang)
"lib/timespec.c": package(pa_test)
"lib/timespec.c": package(pa_test.syntax)
"lib/timespec.c": package(sexplib)
"lib/timespec.c": package(sexplib.syntax)
"lib/timespec.c": package(sexplib_unix)
"lib/timespec.c": package(threads)
"lib/timespec.c": package(unix)
"lib/timespec.c": package(variantslib)
"lib/timespec.c": package(variantslib.syntax)
"lib/time_stubs.c": package(bigarray)
"lib/time_stubs.c": package(bin_prot)
"lib/time_stubs.c": package(bin_prot.syntax)
"lib/time_stubs.c": package(comparelib.syntax)
"lib/time_stubs.c": package(core_kernel)
"lib/time_stubs.c": package(enumerate.syntax)
"lib/time_stubs.c": package(fieldslib)
"lib/time_stubs.c": package(fieldslib.syntax)
"lib/time_stubs.c": package(herelib)
"lib/time_stubs.c": package(herelib.syntax)
"lib/time_stubs.c": package(pa_bench)
"lib/time_stubs.c": package(pa_bench.syntax)
"lib/time_stubs.c": package(pa_ounit)
"lib/time_stubs.c": package(pa_ounit.syntax)
"lib/time_stubs.c": package(pa_pipebang)
"lib/time_stubs.c": package(pa_test)
"lib/time_stubs.c": package(pa_test.syntax)
"lib/time_stubs.c": package(sexplib)
"lib/time_stubs.c": package(sexplib.syntax)
"lib/time_stubs.c": package(sexplib_unix)
"lib/time_stubs.c": package(threads)
"lib/time_stubs.c": package(unix)
"lib/time_stubs.c": package(variantslib)
"lib/time_stubs.c": package(variantslib.syntax)
"lib/time_stamp_counter_stubs.c": package(bigarray)
"lib/time_stamp_counter_stubs.c": package(bin_prot)
"lib/time_stamp_counter_stubs.c": package(bin_prot.syntax)
"lib/time_stamp_counter_stubs.c": package(comparelib.syntax)
"lib/time_stamp_counter_stubs.c": package(core_kernel)
"lib/time_stamp_counter_stubs.c": package(enumerate.syntax)
"lib/time_stamp_counter_stubs.c": package(fieldslib)
"lib/time_stamp_counter_stubs.c": package(fieldslib.syntax)
"lib/time_stamp_counter_stubs.c": package(herelib)
"lib/time_stamp_counter_stubs.c": package(herelib.syntax)
"lib/time_stamp_counter_stubs.c": package(pa_bench)
"lib/time_stamp_counter_stubs.c": package(pa_bench.syntax)
"lib/time_stamp_counter_stubs.c": package(pa_ounit)
"lib/time_stamp_counter_stubs.c": package(pa_ounit.syntax)
"lib/time_stamp_counter_stubs.c": package(pa_pipebang)
"lib/time_stamp_counter_stubs.c": package(pa_test)
"lib/time_stamp_counter_stubs.c": package(pa_test.syntax)
"lib/time_stamp_counter_stubs.c": package(sexplib)
"lib/time_stamp_counter_stubs.c": package(sexplib.syntax)
"lib/time_stamp_counter_stubs.c": package(sexplib_unix)
"lib/time_stamp_counter_stubs.c": package(threads)
"lib/time_stamp_counter_stubs.c": package(unix)
"lib/time_stamp_counter_stubs.c": package(variantslib)
"lib/time_stamp_counter_stubs.c": package(variantslib.syntax)
"lib/unix_stubs.c": package(bigarray)
"lib/unix_stubs.c": package(bin_prot)
"lib/unix_stubs.c": package(bin_prot.syntax)
"lib/unix_stubs.c": package(comparelib.syntax)
"lib/unix_stubs.c": package(core_kernel)
"lib/unix_stubs.c": package(enumerate.syntax)
"lib/unix_stubs.c": package(fieldslib)
"lib/unix_stubs.c": package(fieldslib.syntax)
"lib/unix_stubs.c": package(herelib)
"lib/unix_stubs.c": package(herelib.syntax)
"lib/unix_stubs.c": package(pa_bench)
"lib/unix_stubs.c": package(pa_bench.syntax)
"lib/unix_stubs.c": package(pa_ounit)
"lib/unix_stubs.c": package(pa_ounit.syntax)
"lib/unix_stubs.c": package(pa_pipebang)
"lib/unix_stubs.c": package(pa_test)
"lib/unix_stubs.c": package(pa_test.syntax)
"lib/unix_stubs.c": package(sexplib)
"lib/unix_stubs.c": package(sexplib.syntax)
"lib/unix_stubs.c": package(sexplib_unix)
"lib/unix_stubs.c": package(threads)
"lib/unix_stubs.c": package(unix)
"lib/unix_stubs.c": package(variantslib)
"lib/unix_stubs.c": package(variantslib.syntax)
# Library core_top
"top/core_top.cmxs": use_core_top
<top/*.ml{,i}>: package(bigarray)
<top/*.ml{,i}>: package(bin_prot)
<top/*.ml{,i}>: package(bin_prot.syntax)
<top/*.ml{,i}>: package(comparelib.syntax)
<top/*.ml{,i}>: package(compiler-libs)
<top/*.ml{,i}>: package(core_kernel)
<top/*.ml{,i}>: package(enumerate.syntax)
<top/*.ml{,i}>: package(fieldslib)
<top/*.ml{,i}>: package(fieldslib.syntax)
<top/*.ml{,i}>: package(herelib)
<top/*.ml{,i}>: package(herelib.syntax)
<top/*.ml{,i}>: package(pa_bench)
<top/*.ml{,i}>: package(pa_bench.syntax)
<top/*.ml{,i}>: package(pa_ounit)
<top/*.ml{,i}>: package(pa_ounit.syntax)
<top/*.ml{,i}>: package(pa_pipebang)
<top/*.ml{,i}>: package(pa_test)
<top/*.ml{,i}>: package(pa_test.syntax)
<top/*.ml{,i}>: package(sexplib)
<top/*.ml{,i}>: package(sexplib.syntax)
<top/*.ml{,i}>: package(sexplib_unix)
<top/*.ml{,i}>: package(threads)
<top/*.ml{,i}>: package(unix)
<top/*.ml{,i}>: package(variantslib)
<top/*.ml{,i}>: package(variantslib.syntax)
<top/*.ml{,i}>: use_core
# Executable test_runner
<lib_test/test_runner.{native,byte}>: package(bigarray)
<lib_test/test_runner.{native,byte}>: package(bin_prot)
<lib_test/test_runner.{native,byte}>: package(bin_prot.syntax)
<lib_test/test_runner.{native,byte}>: package(comparelib.syntax)
<lib_test/test_runner.{native,byte}>: package(core_kernel)
<lib_test/test_runner.{native,byte}>: package(enumerate.syntax)
<lib_test/test_runner.{native,byte}>: package(fieldslib)
<lib_test/test_runner.{native,byte}>: package(fieldslib.syntax)
<lib_test/test_runner.{native,byte}>: package(herelib)
<lib_test/test_runner.{native,byte}>: package(herelib.syntax)
<lib_test/test_runner.{native,byte}>: package(oUnit)
<lib_test/test_runner.{native,byte}>: package(pa_bench)
<lib_test/test_runner.{native,byte}>: package(pa_bench.syntax)
<lib_test/test_runner.{native,byte}>: package(pa_ounit)
<lib_test/test_runner.{native,byte}>: package(pa_ounit.syntax)
<lib_test/test_runner.{native,byte}>: package(pa_pipebang)
<lib_test/test_runner.{native,byte}>: package(pa_test)
<lib_test/test_runner.{native,byte}>: package(pa_test.syntax)
<lib_test/test_runner.{native,byte}>: package(sexplib)
<lib_test/test_runner.{native,byte}>: package(sexplib.syntax)
<lib_test/test_runner.{native,byte}>: package(sexplib_unix)
<lib_test/test_runner.{native,byte}>: package(threads)
<lib_test/test_runner.{native,byte}>: package(unix)
<lib_test/test_runner.{native,byte}>: package(variantslib)
<lib_test/test_runner.{native,byte}>: package(variantslib.syntax)
<lib_test/test_runner.{native,byte}>: use_core
<lib_test/*.ml{,i}>: package(bigarray)
<lib_test/*.ml{,i}>: package(bin_prot)
<lib_test/*.ml{,i}>: package(bin_prot.syntax)
<lib_test/*.ml{,i}>: package(comparelib.syntax)
<lib_test/*.ml{,i}>: package(core_kernel)
<lib_test/*.ml{,i}>: package(enumerate.syntax)
<lib_test/*.ml{,i}>: package(fieldslib)
<lib_test/*.ml{,i}>: package(fieldslib.syntax)
<lib_test/*.ml{,i}>: package(herelib)
<lib_test/*.ml{,i}>: package(herelib.syntax)
<lib_test/*.ml{,i}>: package(oUnit)
<lib_test/*.ml{,i}>: package(pa_bench)
<lib_test/*.ml{,i}>: package(pa_bench.syntax)
<lib_test/*.ml{,i}>: package(pa_ounit)
<lib_test/*.ml{,i}>: package(pa_ounit.syntax)
<lib_test/*.ml{,i}>: package(pa_pipebang)
<lib_test/*.ml{,i}>: package(pa_test)
<lib_test/*.ml{,i}>: package(pa_test.syntax)
<lib_test/*.ml{,i}>: package(sexplib)
<lib_test/*.ml{,i}>: package(sexplib.syntax)
<lib_test/*.ml{,i}>: package(sexplib_unix)
<lib_test/*.ml{,i}>: package(threads)
<lib_test/*.ml{,i}>: package(unix)
<lib_test/*.ml{,i}>: package(variantslib)
<lib_test/*.ml{,i}>: package(variantslib.syntax)
<lib_test/*.ml{,i}>: use_core
<lib_test/test_runner.{native,byte}>: custom
# OASIS_STOP
