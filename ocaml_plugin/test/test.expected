Loading non existing mli
failed the expected way

Loading non existing ml
failed the expected way

Loading mli without ml
loaded fine

Loading ml without mli
loaded fine

Loading ml with mli by mentioning ml
loaded fine

Loading ml with mli by mentioning ml without extension
loaded fine

Loading ml with mli by mentioning mli
loaded fine

Loading ml with mli by mentioning wrong mli
failed fine

loading the same ml file several times
really loaded several times

loading the same ml file several times with a cache
really loaded several times, and compiled once

Checking that it really is using the cache
perfect

Loading ml that blows up at toplevel
failed fine

using lazy in a plugin
using lazy is fine

using rec modules in a plugin
using rec modules is fine

using objects in a plugin
using objects is fine

loading several ml files
loaded in the right order and with the right scope

loading several ml files with ocamldep in a read-only folder
loaded with ocamldep in the right order and with the right scope

loading file with a wrong name
wrong module names are rejected

loading names that collide
detected

loading mli that collide
detected

loading ml and mli with different basenames but same module name
type error as expected

loading ml and mli from different dirs
type error as expected

loading ml and mli from different dirs
loaded as expected

checking unused variables warnings 1
loaded ml and mli without warnings

checking unused variables warnings 2
warn error as expected

checking unused variables warnings 3
loaded ml and mli without warnings

checking unused variables warnings 4
warn error as expected

checking unused variables warnings 5
warn error as expected

checking unused variables warnings 6
loaded ml and mli without warnings

checking unused variables warnings 7
warn error as expected

checking run_plugin_toplevel parameter
loaded ml in async by default
loaded ml outside of async if requested

checking persistent archive
loaded ml correctly
use existing compiler from persistent location
loaded ml correctly
refresh existing compiler in the persistent location
loaded ml correctly

loading several ml files with different cases and using ocamldep
ok

